@inject NavigationManager UriHelper
@inject HttpClient Http
<tr>
    <td>@product.Id</td>
    <td>@product.name</td>
    <td>@product.description</td>
    <td>@product.price</td>
    <td>

        <ul class='list-inline m-0'>
            <li class='list-inline-item'>
                <button @onclick="() => ProductDetails(product.Id)" class='btn btn-primary btn-sm' type='button' data-toggle='' data-placement='top' title='View'>View</button>
            </li>
            <li class='list-inline-item'>
                <button @onclick="() => EditProduct(product.Id)" class='btn btn-success btn-sm' type='button' data-toggle='tooltip' data-placement='top' title='Edit'>Edit</button>
            </li>
            <li class='list-inline-item'>
                <button @onclick="() => DeleteProduct(product.Id)" class='btn btn-danger btn-sm' type='button' data-toggle='tooltip' data-placement='top' title='Delete'>Delete</button>
            </li>
        </ul>

    </td>
</tr>

@code {
    [Parameter]
    public Product product { get; set; }

    [Parameter]
    public int id { get; set; }
    [Parameter]
    public EventCallback<int> updateList { get; set; }


    void EditProduct(int id)
    {
        UriHelper.NavigateTo("/EditProduct/" + id);
    }

    void ProductDetails(int id)
    {
        UriHelper.NavigateTo("/VendorProduct/" + id);
    }




    protected async Task DeleteProduct(int id)
    {

        await Http.DeleteAsync("api/Product/delete/" + id);
        //await updateList.InvokeAsync(id);
    }

}
